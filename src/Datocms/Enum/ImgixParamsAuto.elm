-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Datocms.Enum.ImgixParamsAuto exposing (..)

import Json.Decode as Decode exposing (Decoder)


type ImgixParamsAuto
    = Enhance
    | Format
    | Redeye
    | Compress


list : List ImgixParamsAuto
list =
    [ Enhance, Format, Redeye, Compress ]


decoder : Decoder ImgixParamsAuto
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "enhance" ->
                        Decode.succeed Enhance

                    "format" ->
                        Decode.succeed Format

                    "redeye" ->
                        Decode.succeed Redeye

                    "compress" ->
                        Decode.succeed Compress

                    _ ->
                        Decode.fail ("Invalid ImgixParamsAuto type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : ImgixParamsAuto -> String
toString enum____ =
    case enum____ of
        Enhance ->
            "enhance"

        Format ->
            "format"

        Redeye ->
            "redeye"

        Compress ->
            "compress"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ImgixParamsAuto
fromString enumString____ =
    case enumString____ of
        "enhance" ->
            Just Enhance

        "format" ->
            Just Format

        "redeye" ->
            Just Redeye

        "compress" ->
            Just Compress

        _ ->
            Nothing
