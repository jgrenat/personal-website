-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Datocms.Enum.ImgixParamsFlip exposing (..)

import Json.Decode as Decode exposing (Decoder)


type ImgixParamsFlip
    = H
    | V
    | Hv


list : List ImgixParamsFlip
list =
    [ H, V, Hv ]


decoder : Decoder ImgixParamsFlip
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "h" ->
                        Decode.succeed H

                    "v" ->
                        Decode.succeed V

                    "hv" ->
                        Decode.succeed Hv

                    _ ->
                        Decode.fail ("Invalid ImgixParamsFlip type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : ImgixParamsFlip -> String
toString enum____ =
    case enum____ of
        H ->
            "h"

        V ->
            "v"

        Hv ->
            "hv"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ImgixParamsFlip
fromString enumString____ =
    case enumString____ of
        "h" ->
            Just H

        "v" ->
            Just V

        "hv" ->
            Just Hv

        _ ->
            Nothing
