-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Datocms.Enum.ImgixParamsCs exposing (..)

import Json.Decode as Decode exposing (Decoder)


type ImgixParamsCs
    = Srgb
    | Adobergb1998
    | Tinysrgb
    | Strip


list : List ImgixParamsCs
list =
    [ Srgb, Adobergb1998, Tinysrgb, Strip ]


decoder : Decoder ImgixParamsCs
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "srgb" ->
                        Decode.succeed Srgb

                    "adobergb1998" ->
                        Decode.succeed Adobergb1998

                    "tinysrgb" ->
                        Decode.succeed Tinysrgb

                    "strip" ->
                        Decode.succeed Strip

                    _ ->
                        Decode.fail ("Invalid ImgixParamsCs type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : ImgixParamsCs -> String
toString enum____ =
    case enum____ of
        Srgb ->
            "srgb"

        Adobergb1998 ->
            "adobergb1998"

        Tinysrgb ->
            "tinysrgb"

        Strip ->
            "strip"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ImgixParamsCs
fromString enumString____ =
    case enumString____ of
        "srgb" ->
            Just Srgb

        "adobergb1998" ->
            Just Adobergb1998

        "tinysrgb" ->
            Just Tinysrgb

        "strip" ->
            Just Strip

        _ ->
            Nothing
