-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Datocms.Object.UploadVideoField exposing (..)

import Datocms.Enum.MuxThumbnailFormatType
import Datocms.Enum.VideoMp4Res
import Datocms.InputObject
import Datocms.Interface
import Datocms.Object
import Datocms.Scalar
import Datocms.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import ScalarCodecs


duration : SelectionSet Int Datocms.Object.UploadVideoField
duration =
    Object.selectionForField "Int" "duration" [] Decode.int


framerate : SelectionSet Int Datocms.Object.UploadVideoField
framerate =
    Object.selectionForField "Int" "framerate" [] Decode.int


type alias Mp4UrlOptionalArguments =
    { res : OptionalArgument Datocms.Enum.VideoMp4Res.VideoMp4Res
    , exactRes : OptionalArgument Datocms.Enum.VideoMp4Res.VideoMp4Res
    }


{-|

  - res - Pick highest resolution available up to the specified argument
  - exactRes - Pick the exact resolution quality specified in the argument

-}
mp4Url :
    (Mp4UrlOptionalArguments -> Mp4UrlOptionalArguments)
    -> SelectionSet (Maybe String) Datocms.Object.UploadVideoField
mp4Url fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { res = Absent, exactRes = Absent }

        optionalArgs____ =
            [ Argument.optional "res" filledInOptionals____.res (Encode.enum Datocms.Enum.VideoMp4Res.toString), Argument.optional "exactRes" filledInOptionals____.exactRes (Encode.enum Datocms.Enum.VideoMp4Res.toString) ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "mp4Url" optionalArgs____ (Decode.string |> Decode.nullable)


muxAssetId : SelectionSet String Datocms.Object.UploadVideoField
muxAssetId =
    Object.selectionForField "String" "muxAssetId" [] Decode.string


muxPlaybackId : SelectionSet String Datocms.Object.UploadVideoField
muxPlaybackId =
    Object.selectionForField "String" "muxPlaybackId" [] Decode.string


streamingUrl : SelectionSet String Datocms.Object.UploadVideoField
streamingUrl =
    Object.selectionForField "String" "streamingUrl" [] Decode.string


type alias ThumbnailUrlOptionalArguments =
    { format : OptionalArgument Datocms.Enum.MuxThumbnailFormatType.MuxThumbnailFormatType }


{-|

  - format - The file extension of the requested image format. Either png, jpg or gif

-}
thumbnailUrl :
    (ThumbnailUrlOptionalArguments -> ThumbnailUrlOptionalArguments)
    -> SelectionSet String Datocms.Object.UploadVideoField
thumbnailUrl fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { format = Absent }

        optionalArgs____ =
            [ Argument.optional "format" filledInOptionals____.format (Encode.enum Datocms.Enum.MuxThumbnailFormatType.toString) ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "String" "thumbnailUrl" optionalArgs____ Decode.string
